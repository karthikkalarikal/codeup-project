// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"problem-service/pkg/client"
	"problem-service/pkg/config"
	"problem-service/pkg/db"
	"problem-service/pkg/repository"
	"problem-service/pkg/rpc"
	"problem-service/pkg/server"
	"problem-service/pkg/usecase"
)

// Injectors from wire.go:

func InitializeServices() (*server.RpcServer, error) {
	config, err := provideConfig()
	if err != nil {
		return nil, err
	}
	mongoClient, err := db.ConnectToMongo(config)
	if err != nil {
		return nil, err
	}
	userRepository := repository.NewUserRepository(mongoClient)
	userRPCProblem := rpc.NewUserProblemRPC(config)
	userUseCase := usecase.NewUserUseCase(userRepository, userRPCProblem)
	problemUserClient := client.NewUserClient(userUseCase)
	adminRepository := repository.NewAdmimRepository(mongoClient)
	adminUseCase := usecase.NewAdminUseCase(adminRepository)
	adminClientImpl := client.NewAdminClient(adminUseCase)
	rpcServer := server.NewRPCServer(config, problemUserClient, adminClientImpl)
	return rpcServer, nil
}

// wire.go:

func provideConfig() (*config.Config, error) {

	return config.LoadConfig()
}
